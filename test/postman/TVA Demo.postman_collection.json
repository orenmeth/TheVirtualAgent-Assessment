{
	"info": {
		"_postman_id": "c870924d-5313-4da8-8958-7160c1c4a158",
		"name": "TVA Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Persons",
			"item": [
				{
					"name": "GetPersons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Person/GetPersons?page=1&pageSize=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Person",
								"GetPersons"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpsertPerson - Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"newPersonCode\", data.code);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": 0,\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"surname\": \"{{$randomLastName}}\",\r\n  \"idNumber\": \"{{$randomBankAccount}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Person/UpsertPerson",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Person",
								"UpsertPerson"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpsertPerson - Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": {{newPersonCode}},\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"surname\": \"{{$randomLastName}}\",\r\n  \"idNumber\": \"{{$randomBankAccount}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Person/UpsertPerson",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Person",
								"UpsertPerson"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPerson",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"personCode\", data.code);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Person/GetPerson/{{newPersonCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Person",
								"GetPerson",
								"{{newPersonCode}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePerson",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Person/DeletePerson/{{newPersonCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Person",
								"DeletePerson",
								"{{newPersonCode}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "UpsertTransaction - Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"newTransactionCode\", data.code);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": 0,\r\n  \"accountCode\": {{newAccountCode}},\r\n  \"transactionDate\": \"2025-05-04\",\r\n  \"amount\": -5000,\r\n  \"description\": \"{{$randomTransactionType}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Transaction/UpsertTransaction",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Transaction",
								"UpsertTransaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpsertTransaction - Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": {{newTransactionCode}},\r\n  \"accountCode\": {{newAccountCode}},\r\n  \"transactionDate\": \"2025-05-04\",\r\n  \"amount\": -5000,\r\n  \"description\": \"{{$randomTransactionType}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Transaction/UpsertTransaction",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Transaction",
								"UpsertTransaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetTransaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Transaction/GetTransaction/{{newTransactionCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Transaction",
								"GetTransaction",
								"{{newTransactionCode}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteTransaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Transaction/DeleteTransaction/{{newTransactionCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Transaction",
								"DeleteTransaction",
								"{{newTransactionCode}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "GetAccountStatuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Account/GetAccountStatuses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"GetAccountStatuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpsertAccount - Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"newAccountCode\", data.code);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": 0,\r\n  \"personCode\": {{newPersonCode}},\r\n  \"accountNumber\": \"{{$randomBankAccountIban}}\",\r\n  \"outstandingBalance\": 5000,\r\n  \"accountStatusId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Account/UpsertAccount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"UpsertAccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpsertAccount - Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"newAccountCode\", data.code);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": {{newAccountCode}},\r\n    \"personCode\": {{newPersonCode}},\r\n    \"accountNumber\": \"{{$randomBankAccountIban}}\",\r\n    \"outstandingBalance\": 5000.0000,\r\n    \"accountStatusId\": 1,\r\n    \"transactions\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Account/UpsertAccount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"UpsertAccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"pm.environment.set(\"accountCode\", data.code);\r",
									"pm.environment.set(\"personCode\", data.personCode);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Account/GetAccount/{{newAccountCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"GetAccount",
								"{{newAccountCode}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Account/DeleteAccount/{{newAccountCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"DeleteAccount",
								"{{newAccountCode}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}